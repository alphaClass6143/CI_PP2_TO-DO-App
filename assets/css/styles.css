@import url("reset.css");

/*
#
# General styling
#
*/

/* Set variables */
:root {
    --text-color: black;
    --main-color: #0B409C;
    --secondary-color: #10316B;
    --inverted-color: #FDBE34;
}

body {
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: "Inter", sans-serif;
    font-weight: 400;
    height:100vh;
    width:100vw;
    color:var(--text-color);    
}

a {
    text-decoration:none;
    color:var(--text-color);
}

/* Set font sizes */
h1 {
    font-size: clamp(1.5rem, 4vw, 3rem);
}

h2 {
    font-size: clamp(1.25rem, 3vw, 2.5rem);
}

p, figcaption {
    font-size: clamp(0.75rem, 1vw, 1rem);
}

main {
    display:flex;
    height:80vh;
    width:80vw;
    border:1px solid gray;
    box-shadow: 0px 0px 20px -5px rgba(0, 0, 0, 0.5);
    border-radius:5px;
}

#task-list-container {
    width:20%;
    height:100%;
    background-color: rgb(245, 245, 245);
    /* border-right:2px solid gray; */
}

#task-list {
    height:calc(100% - 5rem);
    overflow-y: auto;
    overflow-x: hidden;
    border-right:1px solid gray;
}

#task-list-header {
    display: flex;
    align-items: center;
    padding:1rem;
    height:5rem;
    justify-content: space-between;
    color:white;
    background-color:var(--main-color);

}
.task {
    display:flex;
    align-items: center;
    gap:1rem;
    padding:1rem;
    transition: 0.3s;
    border-bottom: 1px solid gray;
    background-color: linear-gradient(90deg, rgba(240,240,240,1) 0%, rgba(255,255,255,1) 50%, rgba(245,245,245,1) 100%);
}

#task-due-date-enabler, #task-alert-date-enabler {
    font-size: 2rem;
}

#task-due-date-enabler:hover, #task-alert-date-enabler:hover {
    cursor: pointer;
}

.task-checkbox {
    display: flex;
    flex-shrink:0;
    justify-content: center;
    align-items: center;
    border-radius: 50%;
    width:2rem;
    height:2rem;
    color:white;
    background-color: gray;
    transition: 0.5s;
}
.task-text {
    /* display: block; */
    /* width:20rem; */
}


.task-checkbox.checked {
    transition: 0.5s;
    background-color: rgb(0, 175, 0);
}

@keyframes leaves {
    0% {
        transform: scale(1.0);
    }
    100% {
        transform: scale(0);
    }
}
@keyframes enters {
    0% {
        transform: scale(0);
    }
    100% {
        transform: scale(1.0);
    }
}

.task:hover {
    cursor: pointer;
}

.task.active {
    transition: 0.3s;
    position: relative;
    background-color: lightgray;
}

.task.active::before {
    position: absolute;
    overflow-x: visible;
    /* right:-30px; */
    margin-left:252px;
    /* margin-top:30px; */
    transform: rotate(55deg) skew(15deg);
    /* top:0; */
    width:160px;
    height:160px;
    background-color: blue;
    transform-origin: 0.3s;
    content:"";
    z-index: -1;  
}

#task-overview {
    width:80%;
}

#task-header {
    width:100%;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    height:5rem;
    color:white;
    background-color:var(--main-color);
}

#task-header > h1 {
    margin:0 auto;
}

#task-details {
    height:calc(100% - 5rem);
    padding:0rem 3rem;
    gap:2rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

/* width */
::-webkit-scrollbar {
    width: 8px;
    
  }
  
  /* Track */
  ::-webkit-scrollbar-track {
    background: #f1f1f1; 
  }
   
  /* Handle */
  ::-webkit-scrollbar-thumb {
    background: #888;
  }
  
  /* Handle on hover */
  ::-webkit-scrollbar-thumb:hover {
    background: #555; 
  }

.round-btn {
    width:3rem;
    height:3rem;
    font-size:1.5rem;
    background-color: white;
    border-radius: 50%;
    border-width: 2px;
    border-style: solid;
    transition: 0.3s;
}

.round-btn:hover {
    transform: scale(1.1);
    cursor: pointer;
    transition: 0.3s;
}


.modal-container {
    position:absolute;
    top:0;
    left:0;
    display:flex;
    justify-content: center;
    align-items: center;
    background-color: rgba(0, 0, 0, 0.6);
    width:100vw;
    height: 100vh;
    z-index:98;
    opacity:0;
    visibility: hidden;
    transition:1s visibility 0s, 0.5s opacity 0.3s;
}

.modal-container.open {
    display:flex;
    opacity: 1;
    visibility: visible;
    transition: visibility 0s, opacity 0.3s;
}

.modal-container > .modal {
    position:relative;
    display: flex;
    flex-direction: column;
    
    z-index:99;
    background-color: white;
    border-radius:10px;
    padding:5rem;
    transition:0.3s;
    width:max(100rem, 50vw);

    opacity: 1;
    visibility: hidden;
    transition: 0.5s visibility 0s, opacity 0.3s;
}

.modal-container.open > .modal{
    opacity: 1;
    visibility: visible;
    transition:0.5s visibility 0s, 0.5s opacity 0.3s;
}

.modal-close-btn {
    display: flex;
    position:absolute;
    top:2rem;
    right:2rem;
    padding:0;
    font-size:3rem;
    transition:0.3s;
}
.modal-close-btn:hover {
    transition: 0.3s;
    transform: scale(1.05);
    cursor: pointer;
}





.disabled-text {
    text-decoration: line-through;
    color:darkgray;
}
.fa-toggle-on {
    color:green;
}
.fa-toggle-off {
    color:red;
}

#create-task-form {
    display: flex;
    gap:1rem;
    flex-direction: column;
}



#task-control-container {
    display: flex;
    justify-content: space-between;
    width:100%;
}

.btn {
    background-color:#0B409C;
    padding:1rem;
    font-size: 1.25rem;
    border:none;
    color:white;
    border-radius:5px;
    transition: 0.3s;
}

.btn:hover {
    cursor: pointer;
    transition: 0.3s;
    transform: scale(1.05);
}

#edit-btn {
    background-color: white;
    padding:1rem;
    font-size: 3rem;
    border:none;
    border-radius:5px;
    transition: 0.3s;
}

.icon-btn {
    background-color: white;
    padding:1rem;
    font-size: 2rem;
    border:none;
    border-radius:5px;
    transition: 0.3s;
}

.icon-btn:hover {
    cursor: pointer;
    transition: 0.3s;
    transform: scale(1.05);
}

#edit-btn:hover {
    cursor: pointer;
    transition: 0.3s;
    transform: scale(1.05);
}

.list-category:not(:first-child) {
    margin-top: 4rem;
}

.list-category-heading {
    padding:0.25rem 2rem;
    border-bottom: 2px solid black;
}

.form-row {
    display:flex;
    gap:2rem;
    width:100%;
    align-items: center;
}

.form-col {
    display:flex;
    flex-direction: column;
}


#form-control-container {
    display: flex;
    justify-content: space-between;
}



#user-settings-container {
    position: absolute;
    margin-left: auto;
    right:1rem;
}

#user-settings-container > .btn {
    font-size: 2rem;
    background-color: transparent;
    border:none;
    transition: 0.3s;
}

#user-settings-container > .btn:hover {
    cursor: pointer;
    transition: 0.3s;
    transform: scale(1.1);
}

#notification-container {
    visibility: hidden;
    position:absolute;
    right:0;
    height:0;
    height:100vh;
    width:30rem;
    display: flex;
    flex-direction: column;
    justify-content: end;
    gap:1rem;
    padding:4rem 1rem;
}

.notification {
    visibility: visible;
    z-index:100;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    background-color: white;
    color:black;
    font-size:1.5rem;
    border-radius: 10px;
    /* padding:1rem; */

    box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.8);

    transition: opacity 0.3s;
    opacity: 1;
    animation-name: notificationEnter;
    animation-duration: 0.3s;
}
.notification-content {
    padding:1rem;
    width:100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.notification-timer {
    width:100%; 
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
    overflow: hidden;   
}

.notification-timer div {
    background-color:#0B409C;
    height:5px;
    /* animation: ; */
    transform-origin: left center;
}
@keyframes roundtime {
    to {
      /* More performant than animating `width` */
      transform: scaleX(0);
    }
  }
.close-notification-btn {
    border: none;
    background-color:white;
    transition: 0.3s;
}

.close-notification-btn:hover {
    cursor: pointer;
    transition: 0.3s;
    transform: scale(1.1);
}

@keyframes notificationEnter {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
